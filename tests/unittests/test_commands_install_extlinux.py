# This file is part of curtin. See LICENSE file for copyright and license info.

import os
from pathlib import Path
import tempfile

from .helpers import CiTestCase

from curtin import config
from curtin import paths
from curtin.commands import install_extlinux


USE_EXTLINUX = ['extlinux']

EXPECT_HDR = '''\
## /boot/extlinux/extlinux.conf
##
## IMPORTANT WARNING
##
## The configuration of this file is generated automatically.
## Do not edit this file manually, use: u-boot-update

default l0
menu title U-Boot menu
prompt 0
timeout 50
'''

EXPECT_BODY = '''

label l0
\tmenu label Linux 6.8.0-48-generic
\tlinux /vmlinuz-6.8.0-48-generic
\tinitrd /initrd.img-6.8.0-48-generic
\tappend ro quiet

label l0r
\tmenu label Linux 6.8.0-48-generic (rescue target)
\tlinux /vmlinuz-6.8.0-48-generic
\tinitrd /initrd.img-6.8.0-48-generic
\tappend ro single


label l1
\tmenu label Linux 6.8.0-40-generic
\tlinux /vmlinuz-6.8.0-40-generic
\tinitrd /initrd.img-6.8.0-40-generic
\tappend ro quiet

label l1r
\tmenu label Linux 6.8.0-40-generic (rescue target)
\tlinux /vmlinuz-6.8.0-40-generic
\tinitrd /initrd.img-6.8.0-40-generic
\tappend ro single


label l2
\tmenu label Linux 5.15.0-127-generic
\tlinux /vmlinuz-5.15.0-127-generic
\tinitrd /initrd.img-5.15.0-127-generic
\tappend ro quiet

label l2r
\tmenu label Linux 5.15.0-127-generic (rescue target)
\tlinux /vmlinuz-5.15.0-127-generic
\tinitrd /initrd.img-5.15.0-127-generic
\tappend ro single
'''


class TestInstallExtlinux(CiTestCase):
    def setUp(self):
        self.tmpdir = tempfile.TemporaryDirectory(suffix='-curtin')
        self.target = self.tmpdir.name

        versions = ['6.8.0-40', '5.15.0-127', '6.8.0-48']
        boot = os.path.join(self.target, 'boot')
        Path(f'{boot}').mkdir()
        os.system(f'ls {boot}')
        for ver in versions:
            Path(f'{boot}/config-{ver}-generic').touch()
            Path(f'{boot}/initrd.img-{ver}-generic').touch()
            Path(f'{boot}/vmlinuz-{ver}-generic').touch()

        Path(f'{self.target}/empty-dir').mkdir()
        self.maxDiff = None

    def test_get_kernel_list(self):
        iter = paths.get_kernel_list(self.target, full_initrd_path=False)
        self.assertEqual(
            ('vmlinuz-6.8.0-48-generic', 'initrd.img-6.8.0-48-generic',
             '6.8.0-48-generic'),
            next(iter))
        self.assertEqual(
            ('vmlinuz-6.8.0-40-generic', 'initrd.img-6.8.0-40-generic',
             '6.8.0-40-generic'),
            next(iter))
        self.assertEqual(
            ('vmlinuz-5.15.0-127-generic', 'initrd.img-5.15.0-127-generic',
             '5.15.0-127-generic'),
            next(iter))
        try:
            val = next(iter)
            raise ValueError(f'Extra value {val}')
        except StopIteration:
            pass

    def test_empty(self):
        out = install_extlinux.build_content(config.BootCfg(USE_EXTLINUX),
                                             f'{self.target}/empty-dir')
        self.assertEqual(out, EXPECT_HDR)

    def test_normal(self):
        out = install_extlinux.build_content(config.BootCfg(USE_EXTLINUX),
                                             self.target)
        self.assertEqual(EXPECT_HDR + EXPECT_BODY, out)

    def test_no_recovery(self):
        out = install_extlinux.build_content(config.BootCfg(USE_EXTLINUX),
                                             self.target)
        self.assertEqual(EXPECT_HDR + EXPECT_BODY, out)

    def test_install(self):
        install_extlinux.install_extlinux(config.BootCfg(USE_EXTLINUX),
                                          self.target)
        extlinux_path = self.target + '/boot/extlinux'
        self.assertTrue(os.path.exists(extlinux_path))
        extlinux_file = extlinux_path + '/extlinux.conf'
        self.assertTrue(os.path.exists(extlinux_file))


# vi: ts=4 expandtab syntax=python
